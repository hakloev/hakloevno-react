eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgICBkb2NrZXI6CiAgICAgICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICAgICAgcmVwbzogcmVnaXN0cnkuaGFrbG9ldi5uby9oYWtsb2V2bm8vZnJvbnRlbmQKICAgICAgICByZWdpc3RyeTogcmVnaXN0cnkuaGFrbG9ldi5ubwogICAgICAgIHRhZ3M6IFsgbGF0ZXN0IF0KICAgICAgICB3aGVuOgogICAgICAgICAgICBicmFuY2g6IG1hc3RlcgoKICAgIHNzaDoKICAgICAgICBpbWFnZTogcGx1Z2lucy9zc2gKICAgICAgICB3aGVuOgogICAgICAgICAgICBldmVudDogcHVzaAogICAgICAgICAgICBicmFuY2g6IG1hc3RlcgogICAgICAgIGhvc3Q6IGhha2xvZXYubm8KICAgICAgICB1c2VyOiBoYWtsb2V2CiAgICAgICAgcG9ydDogNzIzCiAgICAgICAgc2NyaXB0OgogICAgICAgICAgICAtIGRvY2tlciBwdWxsIHJlZ2lzdHJ5Lmhha2xvZXYubm8vaGFrbG9ldm5vL2Zyb250ZW5kOmxhdGVzdAogICAgICAgICAgICAtIGRvY2tlci1jb21wb3NlIC1mIC9zcnYvZG9ja2VyL2hha2xvZXZuby9kb2NrZXItY29tcG9zZS55bWwgZG93biBmcm9udGVuZAogICAgICAgICAgICAtIGRvY2tlci1jb21wb3NlIC1mIC9zcnYvZG9ja2VyL2hha2xvZXZuby9kb2NrZXItY29tcG9zZS55bWwgdXAgLWQgZnJvbnRlbmQKCiAgICBub3RpZnk6CiAgICAgICAgaW1hZ2U6IGRyaWxsc3Rlci9kcm9uZS1lbWFpbAogICAgICAgIGhvc3Q6IG1haWwubnRudS5mYXAubm8KICAgICAgICBwb3J0OiAyNQogICAgICAgIGZyb206IGRyb25lQGRyb25lLmZhcC5ubwogICAgICAgIHJlY2lwaWVudHM6IFsgcG9zdEBoYWtsb2V2Lm5vIF0KICAgICAgICB3aGVuOgogICAgICAgICAgICBzdGF0dXM6IFsgc3VjY2VzcywgY2hhbmdlZCwgZmFpbHVyZSBdCg.fBEwcOdownlU8cI3CB7XPnKE-SOxCBbW0IGkn8nbc9A